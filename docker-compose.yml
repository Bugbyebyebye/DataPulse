version: '2'

services:
  # 登录 Docker Hub 的服务
#  login-service:
#    image: alpine
#    command: echo "Logging in to Docker Hub"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      - DOCKER_USERNAME="差点就睡着了"
#      - DOCKER_PASSWORD="maojiukeai1412"
#    depends_on:
#      - my_service  # 这里使用的服务名称需要根据实际情况调整
#    entrypoint: sh -c 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
# 反向代理
#  traefik:
#    image: traefik
#    command: --api.insecure=true --providers.docker
#    restart: always
#    container_name: traefik
#    ports:
#      - "80:80"
#      - "443:443"
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: '2048M'
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./Traefik/config:/etc/traefik
#      - ./Traefik/logs:/etc/traefik/config
#      - ./Traefik/letsencrypt:/letsencrypt

  etcd:
    image: 'bitnami/etcd:latest'
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
# 生产环境不端口，测试可取消注释
#    ports:
#      - "2379:2379"
#      - "2380:2380"
    volumes:
      - ./etcd_data:/bitnami/etcd
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2379/health"]
      interval: 10s
      retries: 3

  auth-service:
    image: registry.cn-hangzhou.aliyuncs.com/dockercns/auth-service:test
    container_name: auth-service
    depends_on:
      - etcd
      - redis

  gateway-service:
    image: registry.cn-hangzhou.aliyuncs.com/dockercns/gateway-service:test
    container_name: gateway-service
    depends_on:
      - etcd
      - redis
    ports:
      - "8080:8080"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.datapulseapi.rule=Host(`api.example.com`)"
#      - "traefik.http.routers.datapulseapi.service=datapulseapi"
#      - "traefik.http.routers.datapulseapi.entrypoints=https"
#      - "traefik.http.services.datapulseapi.loadbalancer.server.port=8080"
#      - "traefik.http.routers.datapulseapi.tls=true"
#      - "traefik.http.routers.datapulseapi.tls.certresolver=myCertResolver"
#      - "traefik.http.services.datapulseapi.loadbalancer.passhostheader=true"

  redis:
    restart: always
    image: redis
    container_name: redis
# 生产环境不端口，测试可取消注释
#    ports:
#      - "6379:6379"
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  dockerupdate:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30